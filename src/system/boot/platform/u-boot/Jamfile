SubDir HAIKU_TOP src system boot platform u-boot ;

SubDirHdrs $(HAIKU_TOP) src system boot arch $(TARGET_KERNEL_ARCH_DIR) ;
SubDirHdrs $(HAIKU_TOP) src system boot platform u-boot arch $(TARGET_KERNEL_ARCH_DIR) ;

UsePrivateHeaders [ FDirName kernel boot platform u-boot ] ;
UsePrivateHeaders [ FDirName kernel platform u-boot ] ;
UsePrivateHeaders [ FDirName kernel disk_device_manager ] ;
UsePrivateHeaders [ FDirName graphics common ] ;
UsePrivateHeaders [ FDirName graphics vesa ] ;
UsePrivateHeaders [ FDirName storage ] ;

UseLibraryHeaders [ FDirName libfdt ] ;

{
	local defines = _BOOT_MODE ;

	defines = [ FDefines $(defines) ] ;
	SubDirCcFlags $(defines) -g3 -O0 ;
	SubDirC++Flags $(defines) -fno-rtti -g3 -O0 ;
}

local platform_src =
	start.cpp
	console.cpp
	cpu.cpp
	debug.cpp
	devices.cpp
	dtb.cpp
	keyboard.cpp
	menu.cpp
	serial.cpp
	uimage.cpp
	video.cpp
	;

local support_libs =
	boot_fdt.a
	;

local platform ;
for platform in [ MultiBootSubDirSetup u-boot ] {
	on $(platform) {

		BootMergeObject boot_platform_u-boot_common.o :
			$(platform_src)
			: :
			[ MultiBootGristFiles $(support_libs) ]
			boot_platform_generic_u-boot.a
		;

		BootMergeObject boot_platform_u-boot.o :
			: :
			boot_platform_u-boot_$(TARGET_ARCH).o
			boot_platform_u-boot_common.o
		;
	}
}

SubInclude HAIKU_TOP src system boot platform u-boot arch $(TARGET_ARCH) ;
