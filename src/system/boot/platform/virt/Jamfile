SubDir HAIKU_TOP src system boot platform virt ;

SubDirHdrs $(HAIKU_TOP) headers private kernel boot platform virt ;

UsePrivateHeaders [ FDirName kernel boot platform virt ] ;
UsePrivateHeaders [ FDirName kernel boot arch $(TARGET_KERNEL_ARCH_DIR) ] ;
UsePrivateHeaders [ FDirName kernel disk_device_manager ] ;
UsePrivateHeaders [ FDirName graphics common ] ;
UsePrivateHeaders [ FDirName storage ] ;
UsePrivateHeaders [ FDirName virtio ] ;
UseLibraryHeaders [ FDirName libfdt ] ;

{
	local defines = _BOOT_MODE ;

	defines = [ FDefines $(defines) ] ;
	SubDirCcFlags $(defines) ;
	SubDirC++Flags $(defines) -fno-rtti ;
	SubDirAsFlags -I $(SUBDIR) ;
}

local platform_src =
	start.cpp
	console.cpp
	cpu.cpp
	debug.cpp
	devices.cpp
	menu.cpp
	mmu.cpp
	#smp.cpp
	video.cpp

	dtb.cpp
	fixed_font.S
	fw_cfg.cpp
	graphics.cpp
	serial.cpp
	virtio.cpp

	#traps.cpp
	#traps_asm.S
	#entry.S
	;

local support_libs =
	boot_fdt.a
	;

local platform ;
for platform in [ MultiBootSubDirSetup virt ] {
	on $(platform) {

		BootMergeObject boot_platform_virt_common.o :
			$(platform_src)
			: :
			[ MultiBootGristFiles $(support_libs) ]
			boot_platform_generic_virt.a
		;

		BootMergeObject boot_platform_virt.o :
			: :
			boot_platform_virt_$(TARGET_ARCH).o
			boot_platform_virt_common.o
		;
	}
}

SubInclude HAIKU_TOP src system boot platform virt arch $(TARGET_ARCH) ;
